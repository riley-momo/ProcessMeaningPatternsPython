% Saved by Prover9-Mace4 Version 0.5, December 2007.

set(ignore_option_dependencies). % GUI handles dependencies

if(Prover9). % Options for Prover9
  assign(max_seconds, 60).
end_if.

if(Mace4).   % Options for Mace4
  assign(max_seconds, 60).
end_if.

formulas(assumptions).

% Mapped Data
subactivity_occ(o1, A).
subactivity_occ(o2, A).
subactivity_occ(o3, A).

occurrence_of(o1, Acc_IPr).
occurrence_of(o2, Q_Aw).
occurrence_of(o3, Acc_WU).

participates(OrgC, o1).
participates(OrgB, o2).
participates(OrgC, o3).

occurs_at(o1, t16_28).
occurs_at(o2, t16_35).
occurs_at(o3, t16_40).

before(t16_28, t16_35).
before(t16_35, t16_40).

resource(OrgB).
resource(OrgC).

activity_occurrence(o1).
activity_occurrence(o2).
activity_occurrence(o3).
activity_occurrence(A).

% Unique Names Assumptions
-(o1 = o2).
-(o1 = o3).
-(o2 = o3).
-(A = o1).
-(A = o2).
-(A = o3).
-(Acc_IPr = Q_Aw).
-(Q_Aw = Acc_WU).
-(Acc_IPr = Acc_WU).
-(OrgB = OrgC).

% Data Theory

all r1 all r2 all o1 all o2 all c 
    (hand_off(r1, r2, o1, o2, c) <->
    (next_subOcc_event(o1, o2, c) & 
     participates(r1, o1) & 
     participates(r2, o2) & 
     (r1 != r2))).

all c (ping_pong(c) <->
    (exists e1 exists e2 exists e3 exists e4 exists r1 exists r2 exists r3 exists r4
     (hand_off(e1, r1, e2, r2, c) &
      hand_off(e3, r3, e4, r4, c) &
      -(e1 = e3) & 
      -(e2 = e4)))).

% Process Ontology Axioms
(all x  (activity(x) | activity_occurrence(x) | timepoint(x) | object(x))).

(all x  ((activity(x) -> -(activity_occurrence(x) | object(x) | timepoint(x))) & (activity_occurrence(x) -> -(object(x) | timepoint(x))) & (object(x) -> -(timepoint(x))))).

all x (resource(x) -> object(x)).

all t1 all t2 (before(t1,t2) -> -(t1 = t2)).

all t1 all t2 (before(t1,t2) -> -before(t2,t1)).

all t1 all t2 all t3 ((before(t1, t2) & before(t2, t3)) -> before(t1, t3)).

all t -before(t,t).

all x (activity_occurrence(x) -> 
  (exists t1 exists t2 
    (begin_of(x, t1) & end_of(x, t2) & beforeEq(t1, t2)))).

all o all t (occurs_at(o,t) -> begin_of(o,t) & end_of(o,t)).

all o1 all o2 all c all t1 all t2 
    ((occurs_at(o1, t1) & occurs_at(o2, t2) & before(t1, t2) & 
      subactivity_occ(o1,c) & subactivity_occ(o2,c)) 
     -> next_subOcc_event(o1, o2, c)).

end_of_list.

formulas(goals).

exists c ping_pong(c).

end_of_list.

